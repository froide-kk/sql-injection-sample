import com.amazonaws.services.s3.model.ObjectMetadata;
buildscript {
	ext {
		springBootVersion = "1.5.6.RELEASE"
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("jp.classmethod.aws:gradle-aws-plugin:0.35")
		classpath("org.flywaydb:flyway-gradle-plugin:3.2.1")
	}
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"
apply plugin: "pmd"
apply plugin: "io.spring.dependency-management"

jar {
    baseName = "sql-injection-sample"
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	// Thymeleaf
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")

	// Spring Security
	compile("org.springframework.boot:spring-boot-starter-security")

	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")

	// MySQL
	compile("commons-dbcp:commons-dbcp:1.4")
	runtime("mysql:mysql-connector-java:6.0.6")

	// LOMBOK
	compileOnly("org.projectlombok:lombok")

	// transaction
	compile("javax.transaction:javax.transaction-api:1.2-b03")

	compile ('org.modelmapper:modelmapper:1.1.1')

	// Log4j2
	compile("org.springframework.boot:spring-boot-starter-log4j2")
	configurations {
		compile.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
	}
	compile("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.6.1")

	// Commons
	compile("org.json:json:20141113")

	// commons-io
	compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

	compile("org.springframework.boot:spring-boot-devtools")

}

test {
	jvmArgs "-noverify"
}

task wrapper(type: Wrapper) {
	gradleVersion = "4.0.1"
}

build.mustRunAfter clean
